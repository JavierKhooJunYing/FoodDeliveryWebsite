@page "/cart"
@inject ICartService CartService

@if (!orderPlaced)
{
    <h3>Delicious Cart</h3>
    @if (cartItems == null || cartItems.Count <= 0)
    {
        <span>Your Delicious Cart Is Empty :(</span>
    }
    else
    {
        <div>
            @foreach (var item in cartItems)
            {
                <div class="item-container">
                    <div class="item-image-wrapper"><img src="@item.MenuItemImageUrl" class="item-image" /></div>
                    <div class="item-name">
                        <h5><a href="/menuitem/@item.MenuItemId">@item.MenuItemName</a></h5>
                        <button class="btn-delete" @onclick="@(() => DeleteCartItem(item))">Delete</button>
                        <EditForm Model="item">
                            <InputNumber id="quantity" @bind-Value="item.Quantity" class="form-control" style="width:70px" />
                        </EditForm>
                    </div>
                    <div class="item-price">S$@(item.MenuItemPrice * item.Quantity)</div>
                </div>
            }
            <div class="item-price">
                Total (@cartItems.Count) : S$@cartItems.Sum(item => item.MenuItemPrice * item.Quantity)
            </div>
            <div style="text-align:center; margin-top:10px;">
                <button class="btn btn-primary btn-lg" @onclick="PlaceOrder">Place Order</button>
            </div>
        </div>
    }
}
else
{
    <h3>Thank You For Your Order!</h3>
    <h4>Your Order Details:</h4>
    <div>
        @foreach (var item in cartItems)
        {
            <div class="item-container">
                <div class="item-image-wrapper"><img src="@item.MenuItemImageUrl" class="item-image" /></div>
                <div class="item-name">
                    <h5><a href="/menuitem/@item.MenuItemId">@item.MenuItemName</a></h5>                   
                </div>
                <div class="item-price">S$@(item.MenuItemPrice * item.Quantity)</div>
            </div>
        }
        <div class="item-price">
            Total (@cartItems.Count) : S$@cartItems.Sum(item => item.MenuItemPrice * item.Quantity)
        </div>
    </div>
}

@code {

    List<CartItem> cartItems = new List<CartItem>();
    bool orderPlaced = false;

    protected override async Task OnInitializedAsync()
    {
        cartItems = await CartService.GetCartItems();
    }

    private async Task DeleteCartItem(CartItem item)
    {
        await CartService.DeleteCartItem(item);
        cartItems = await CartService.GetCartItems();
    }

    private async Task PlaceOrder()
    {
        orderPlaced = true;
        await CartService.EmptyCart();
    }
}
