@page "/menuitem/{id:int}"
@inject IMenuItemService MenuItemService
@inject ICartService CartService 
@inject ILocalStorageService LocalStorage 
@inject IToastService ToastService

@if (menuItem == null)
{
    <span>@message</span>
}
else
{
    <div class="media">
        <div class="media-img-wrapper mr-2">
            <img class="media-img" src="@menuItem.ImageUrl" alt="@menuItem.Name" />
        </div>
        <div class="media-body">
            <h2 class="mb-0">@menuItem.Name</h2>
            <p>@menuItem.Description</p>
            <h4 class="price">
                S$@menuItem.Price
            </h4>
            <EditForm Model="cartItem">
                <div class="form-group">
                    <InputNumber id="quantity" @bind-Value="cartItem.Quantity" class="form-control" style="width:70px;" />
                </div>
            </EditForm>
            <button class="btn btn-primary" @onclick="AddToCart">
                <i class="oi oi-cart"></i>&nbsp;&nbsp;&nbsp;Add To Cart
            </button>
        </div>
    </div>
}

@code {

    private MenuItem menuItem = null;
    private CartItem cartItem = new CartItem { Quantity = 1 };
    private string message;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        message = "Loading Menu Item...";

        var result = await MenuItemService.GetMenuItemById(Id);

        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            menuItem = result.Data;
        }
    }

    private async Task AddToCart()
    {
        cartItem.MenuItemId = menuItem.Id;
        cartItem.MenuItemName = menuItem.Name;
        cartItem.MenuItemDescription = menuItem.Description;
        cartItem.MenuItemImageUrl = menuItem.ImageUrl;
        cartItem.MenuItemPrice = menuItem.Price;

        await CartService.AddToCart(cartItem);
    }
}
